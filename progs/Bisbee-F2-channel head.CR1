'CR1000 Series Datalogger
' Modify program from Quinn Hall and send variable to CR300 logger as photo trigger
' By Mike Yao
'Triggers 12V current
'Author: Quinn Hull
' PakBus ID 62 for this CR1000 and will send to Trigger logger CR300 ID 61, same table and variables 
' used in the CR300 logger

'Change Log
'10022022: Create Trigger for 12V based on counter
'10162022: Create Trigger for 12V based on reconnyx
'12142022: Back to measuring inundation as a raw voltage
'12152022: Moved to CR300 from CR1000
'02132023: For three sensors
'04152023: Changes for Mike
'05012023: Updates for field implementation, QH
'05022023: Configuring Send/Get Variables
' Wiring Diagram
' 

'Declare Variables and Units
Public BattV, PTemp_C
Public RXResponse, PakBusAddr ' parameters for 'send variable'; RXResponse is a code, PakBusAddr is the destination PakBus
Public Inundation(3), V(4), PT(4) ' Sensors
Public TrigFlag As Boolean ' if inundated, True.
Public Threshold As Float ' inundation in excess sets TrigFlag to True
Public ThresholdFail As Float ' inundation below this indicates the sensor has most likely failed, and would otherwise generate a false positive
Public ThresholdPT As Float ' pressures in excess sets TrigFlag to True
Public ThresholdFailPT As Float ' inundatino above this indcates the sensor has most likley failed, and would otherwise generate a false positive
' for pressure transducer calibration
Public Offset(3)
Public slope
Public intercept

Units BattV=Volts
Units PTemp_C=Deg C
Units Threshold=mV/mv
Units Inundation()=mV/mV
Units V()=mV '?
Units PT()=cm '?

'Define Data Tables
DataTable(InundationData,True,-1)
	Sample(1,Threshold,FP2)
	Sample(1,ThresholdPT,FP2)
	Sample(1,TrigFlag,FP2)
	Sample(3,Inundation(),FP2)
	Sample(4,V(),FP2)
	Sample(4,PT(),FP2)
EndTable

DataTable(HourlyInundationData,True,-1)
	DataInterval(0,60,Min,10)
  Average(1,BattV,FP2,False)
	Average(1,PTemp_C,FP2,False)
	Average(1,Threshold,FP2,False)
	Average(1,ThresholdPT,FP2,False)
	Average(1,TrigFlag,FP2,False)
	Average(3,Inundation(),FP2,False)
	Average(4,V(),FP2,False)
	Average(4,PT(),FP2,False)
EndTable


Sub IfTransducer(PTarr(4), PTthresh, PTbool, FailthreshPT)
' sub IfTransducer, sets the trigger value to true of median is above threshold
' PTarr(4) : local variable for four PTs (including baro)
' PTthresh : threshold at which the boolean is set to true  
' FailthreshPT : threshold above which a sensor has failed
' bool : exactly equivalent to the inundation flag, TrigFlag
  Public MaxPT(2), MinPT(2)
  MaxSpa(MaxPT(),3,PTarr())
  MinSpa(MinPT(),3,PTarr())
  If (PTarr  (6 - MaxPT(2) - MinPT(2)) >= PTthresh) AND (PTarr  (6 - MaxPT(2) - MinPT(2)) <= FailthreshPT) Then ' cheeky way to declare spatial median for three 
    PTbool = true
  EndIf 
EndSub

Sub IfInundation(Inarr(3),Inthresh, Inbool, Failthresh)
  ' sub ifInundated(Inundation, threshold)
  ' Inarr(3) : local variable for three inundation sensors
  ' Inthresh : theshold below which boolean is set to true
  ' Failthresh : threshold below which a sensor has failed
  ' Inbool : exactly equivalent to the inundation flag, TrigFlag
  Dim I
  For I=1 To 3 Step 1
     If (Inarr(I) <= Inthresh) AND (Inarr(I) >= Failthresh) Then 
      Inbool = true
    EndIf   
  Next 
EndSub

'Main Program
BeginProg
  TrigFlag = false 
  Threshold = 0.5
  ThresholdFail = 0.002
  ThresholdPT = 10
  ThresholdFailPT = 20
  PakBusAddr = 56
  Offset(1)() = 2.7
  Offset(2)() = -4.1
  Offset(3)() = 1.4	
  slope=0.540044284 
  intercept=-872.7115623
 
 
	'Main Scan
	Scan(10,Sec,1,0)
	 
		Battery(BattV)
		PanelTemp(PTemp_C,60)
		
		'Generic Half Bridge measurements 'Inundation'
		BrHalf(Inundation(1),1,mV2500,1,VX1,1,500,True,0,60,1,0)
		BrHalf(Inundation(2),1,mV2500,2,VX1,1,500,True,0,60,1,0)
		BrHalf(Inundation(3),1,mV2500,3,VX1,1,500,True,0,60,1,0)
    '	Take 4 transducer readings, V1-V3 for piezometers and V4 is for reference	
    BrHalf (V(1),1,mV2500,5,Vx2,1,2500,False ,0,250,2500,0)
		BrHalf (V(2),1,mV2500,6,Vx2,1,2500,False ,0,250,2500,0)
		BrHalf (V(3),1,mV2500,7,Vx2,1,2500,False ,0,250,2500,0)
    BrHalf (V(4),1,mV2500,8,Vx2,1,2500,False ,0,250,2500,0)    
    ' Baro-correct transducer readings
    PT(4)=V(4)*slope + intercept ' baro PT (relative to `0`) at time of calibration
    PT(1)=(V(1)-Offset(1))*slope + intercept - PT(4)
    PT(2)=(V(2)-Offset(2))*slope + intercept - PT(4)
    PT(3)=(V(3)-Offset(3))*slope + intercept - PT(4)
    
    
		' set trig flag
    Call IfTransducer(PT(), ThresholdPT, TrigFlag, ThresholdFailPT)
    Call IfInundation(Inundation(), Threshold, TrigFlag, ThresholdFail)

    ' trigger logic (all handled on the 'get' side)
    If (TrigFlag = true) Then
      SendVariables (RXResponse,ComSDC7,0,PakBusAddr,0000,0,"Public","TrigFlag",TrigFlag,1)
  		'Call Data Tables and Store Data
  		CallTable InundationData
    EndIf
   
    CallTable HourlyInundationData
    
    ' assume the null hyothesis (no drying)
    TrigFlag = false 

	NextScan
EndProg

